(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[9820,4017],{8346:function(e,n,t){"use strict";var s=t(5893),a=t(7294),o=t(9990),i=t(8751);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{},s=Object.keys(t);"function"===typeof Object.getOwnPropertySymbols&&(s=s.concat(Object.getOwnPropertySymbols(t).filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})))),s.forEach((function(n){r(e,n,t[n])}))}return e}function l(e,n){if(null==e)return{};var t,s,a=function(e,n){if(null==e)return{};var t,s,a={},o=Object.keys(e);for(s=0;s<o.length;s++)t=o[s],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(s=0;s<o.length;s++)t=o[s],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}n.Z=function(e){var n=e.video,t=e.className,r=l(e,["video","className"]),d=n.sources,h=n.size,m=void 0===h?{}:h,p=m.width,u=void 0===p?1e3:p,f=m.height,j=void 0===f?0:f,x=(0,a.useState)(!1),b=x[0],g=x[1];return(0,s.jsx)(o.Z,{children:function(e){var n=e._ref,a=e.inView,o=l(e,["_ref","inView"]);return(0,s.jsx)("video",c({ref:n,onLoadedData:function(){return g(!0)},width:u,height:j,className:[i.video,t,b?"":i.loading].join(" ")},r,o,{children:d.map((function(e){var n=e.src,t=l(e,["src"]);return(0,s.jsx)("source",c({src:a?n:null},t),n)}))}),a?1:0)}})}},5474:function(e,n,t){"use strict";t.r(n),t.d(n,{codeBlocks:function(){return f},default:function(){return g},frameCount:function(){return j},getFrameURL:function(){return x},metadata:function(){return b}});var s=t(5893),a=t(1151),o=t(1334),i=t(3741),r=t(8346),c=t(7136),l={id:.9912827379033569,resolutions:{1:{src:"/.assets/25a3cd56a2be982cda514ca79883ea57/iMessage.webp",scale:1,width:414,height:465},2:{src:"/.assets/5cfe01c8ff3c6994222c6ad102087476/iMessage.webp",scale:2,width:828,height:930}}},d={id:.6433254024404167,resolutions:{1:{src:"/.assets/930f96cfa108a410442418563ee3cac7/frames.webp",scale:1,width:842,height:108},2:{src:"/.assets/cb94ff261701a2b4872a0037bbb5e82d/frames.webp",scale:2,width:1684,height:216}}},h={id:.7788260055208935,resolutions:{1:{src:"/.assets/b98a4b7d7ec1fd17c8bc4073d58e130b/qt.webp",scale:1,width:388,height:525},2:{src:"/.assets/7e4768587a7152dc8324cf3a45bf449d/qt.webp",scale:2,width:774,height:1050}}},m="/.assets/bf0c0fbce229c1188b5907755afd89d9/lag.mp4",p="/.assets/d05f13b4b1aba3a83466bb937920bfa0/lag.webm",u={id:.7804315719795916,resolutions:{1:{src:"/.assets/bc144f17774402c6846b790407e433b8/sprites.webp",scale:1,width:4590,height:3850}}},f=[{language:"txt",lines:["Input #0, \u200bmov\u200b,mp4,m4a,3gp,3g2,mj2, from './me-360t.mov':","  Metadata:","    major_brand     : qt","    minor_version   : 0","    compatible_brands: qt","    creation_time   : 2020-11-24T18:30:38.000000Z","    \u200bcom.apple.quicktime.description: Memoji video, skin tone: Fairest Skin Tone 1; hairstyle: Maple, Short and straight updo with side parting; eyes: Blue;, facial hair: Flaxen, Shadow moustache and beard;\u200b","  Duration: 00:00:05.25, start: 0.000000, bitrate: 1992 kb/s","    Stream #0:0(und): Audio: aac (LC) (mp4a / 0x6134706D), 44100 Hz, mono, fltp, 63 kb/s (default)","    Metadata:","      creation_time   : 2020-11-24T18:30:38.000000Z","      handler_name    : Core Media Audio","    Stream #0:1(und): Video: \u200bhevc\u200b (Main) (hvc1 / 0x31637668), \u200byuv420p\u200b(tv, bt709), 640x480, 1753 kb/s, 57.56 fps, 60 tbr, 600 tbn, 600 tbc (default)","    Metadata:","      creation_time   : 2020-11-24T18:30:38.000000Z","      handler_name    : Core Media Video","      encoder         : HEVC",""]},{language:"txt",lines:["com.apple.quicktime.description:","\tMemoji video,","\t\tskin tone: Fairest Skin Tone 1;","\t\thairstyle: Maple, Short and straight updo with side parting;","\t  eyes: Blue;","\t ,facial hair: Flaxen, Shadow moustache and beard;"]},{language:"swift",lines:["...","","let trackReaderOutput = AVAssetReaderTrackOutput(track: videoTrack, outputSettings:[String(kCVPixelBufferPixelFormatTypeKey): NSNumber(value: kCVPixelFormatType_32BGRA)])","","...","","while let sampleBuffer = trackReaderOutput.copyNextSampleBuffer() {","\tif let imageBuffer = CMSampleBufferGetImageBuffer(sampleBuffer) {","\t  let ciimage: CIImage = CIImage(cvPixelBuffer: imageBuffer)","\t  if let colorSpace = CGColorSpace(name: CGColorSpace.sRGB) {","\t\t  let format = CIFormat.RGBA16 // 16-bit RGBA","\t\t  let quality = 1.0 // 1.0 = lossless","","\t\t\t...","","\t\t  try context.writePNGRepresentation(of: ciimage, to: outURL, format: format, colorSpace: colorSpace, options: [kCGImageDestinationLossyCompressionQuality as CIImageRepresentationOption: quality])","\t  }","\t}","  frameIndex += 1","}","","..."]},{language:"bash",lines:["ffmpeg -framerate 60 -i ./frame-%0d.png -c:v libvpx-vp9 -pix_fmt yuva420p -speed 0 -crf 16 -an ./me.webm"]},{language:"bash",lines:['for file in *.png; do cwebp -lossless -mt "./$file" -o "./${file//\\.png/.webp}"; done']},{language:"bash",lines:['for file in *.png; do cwebp -q 80 -mt -crop 100 26 459 350 "./$file" -o "./${file//\\.png/.webp}"; done']},{language:"bash",lines:["montage ./*.webp -define webp:lossless=true -geometry '1x1+0+0<' -tile 10x -background none ./output.webp","","cwebp -q 80 ./output.webp -o ./compressed.webp"]}],j=Math.floor(105),x=function(e){return"/me-360t/frame-".concat(3*e,".webp")},b={title:"Making My Interactive Memoji",description:"Interactive Memoji for the Web",emoji:"\ud83d\udc66\ud83c\udffb",date:"2020-12-16",category:["dev"],image:{id:.240558191327781,resolutions:{1:{src:"/.assets/c38df9448ff1e5c25b94797dd4e4976e/header.webp",scale:1,width:1e3,height:400},2:{src:"/.assets/09d9af82603cfcf70d08ebba1a9259c0/header.webp",scale:2,width:2e3,height:800},3:{src:"/.assets/8949b84f84c14b6a3f20734e7103a3d4/header.webp",scale:3,width:3e3,height:1200},.5:{src:"/.assets/3bfa76fd93b6908bd9a7c210d36af5be/header.webp",scale:.5,width:500,height:200}}}};var g=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=function(){var n=Object.assign({h2:"h2",a:"a",p:"p",strong:"strong",sup:"sup",code:"code",blockquote:"blockquote",em:"em",ol:"ol",li:"li",pre:"pre",span:"span",figure:"figure",figcaption:"figcaption",del:"del",ul:"ul",section:"section",hr:"hr"},(0,a.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(s.Fragment,{}),"\n","\n","\n","\n","\n","\n",(0,s.jsx)(n.h2,{id:"memoji",children:(0,s.jsx)(n.a,{href:"#memoji",children:"Memoji?"})}),"\n",(0,s.jsx)(n.p,{children:"Introduced with iOS 12, Memoji is Apple's progression of the ubiquitous emoji. Set apart from its ancestors, Memoji are personalised caricatures, offering near infinite options for customisation."}),"\n",(0,s.jsxs)(n.p,{children:["Memoji's good looks haven't gone unrecognised, and many people use static, immobile Memoji as profile pictures, or as avatars on their website. I wanted to follow suit, but by opting for the static image, you really lose their sense of personality and liveliness. I didn't want to settle for this, and chose to explore the possibility of embedding ",(0,s.jsx)(n.strong,{children:"dynamic"})," and ",(0,s.jsx)(n.strong,{children:"interactive"})," Memoji instead."]}),"\n",(0,s.jsxs)(n.p,{children:["The fact that they're fully rigged, and tightly integrated with iOS devices' built-in face tracking technology makes them really easy to create, and perfect for the majority who don't possess the artistic aptitude to use Blender for such tasks. This can look really great",(0,s.jsx)(n.sup,{children:(0,s.jsx)(n.a,{href:"#def-1",id:"ref-1","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"1"})})," however, and should be the default first choice for anyone who's able to."]}),"\n",(0,s.jsxs)(n.p,{children:["They're not without their flaws though; tightly integrated into Apple's own ecosystem, Memoji and the mechanisms to create them (ie ",(0,s.jsx)(n.code,{children:"AvatarKit"}),") are ",(0,s.jsx)(n.strong,{children:"not"})," exposed outside of iMessage and FaceTime. Apple has a history of limiting the use of their emojis",(0,s.jsx)(n.sup,{children:(0,s.jsx)(n.a,{href:"#def-2",id:"ref-2","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"2"})}),", and I imagine the restrictions on Memoji stem from the same corporate delusion. They'll probably also tell you that using Memoji outside of their ecosystem is not allowed. Oops \ud83d\udd95."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"So, this is what we'll be creating:"})}),"\n",(0,s.jsx)("section",{className:c.memojiContainer,children:(0,s.jsx)(o.default,{className:c.memoji,frameTimeout:null,frameCount:j,getFrameURL:x,width:Math.floor(688.5),height:Math.floor(525)})}),"\n",(0,s.jsx)(n.h2,{id:"the-plan-of-attack",children:(0,s.jsx)(n.a,{href:"#the-plan-of-attack",children:"The Plan of Attack"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"N.B."})," A lot of this post didn't initially work - so it's just here to document the journey."]}),"\n",(0,s.jsxs)(n.p,{children:["\u2728. Skip ahead a bit if you're only interested in what ",(0,s.jsx)(n.em,{children:"did"})," work."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Firstly let's set out what we're trying to achieve, then we'll visit each of them in turn:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Find a way of ",(0,s.jsx)(n.strong,{children:"creating"})," a Memoji"]}),"\n",(0,s.jsxs)(n.li,{children:["Get said Memoji ",(0,s.jsx)(n.strong,{children:"into a useable format"})]}),"\n",(0,s.jsxs)(n.li,{children:["Insert Memoji into our ",(0,s.jsx)(n.strong,{children:"website"})]}),"\n",(0,s.jsxs)(n.li,{children:["Allow users to ",(0,s.jsx)(n.strong,{children:"interact"})," with the Memoji"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"like-a-record-baby",children:(0,s.jsx)(n.a,{href:"#like-a-record-baby",children:"Like a record baby\u2026"})}),"\n",(0,s.jsx)(n.p,{children:"Creating the Memoji is probably the simplest of the steps, although there are a few things to note."}),"\n",(0,s.jsxs)(n.p,{children:["We're going to to use iMessage to create out Memoji. Importantly we want to create a ",(0,s.jsx)(n.em,{children:"video"}),", ",(0,s.jsx)(n.strong,{children:"not"})," a Memoji sticker."]}),"\n","\n",(0,s.jsx)(i.Z,{image:l,alt:"iMessage"}),"\n",(0,s.jsxs)(n.p,{children:["You want to record yourself rotating your head while keeping eye contact with the camera. The initial idea was to have the Memoji's ",(0,s.jsx)(n.strong,{children:"gaze"})," following your mouse, but due to the limitations of our method, we can't converge or diverge the eyes, nor face the head straight ahead. These issues ruin the effect if we go for a 'following the mouse' type effect, so it's better to go for a 'tilting the head' type effect instead."]}),"\n",(0,s.jsx)(n.p,{children:"Have a play with the finished product, and compare that with your actual head:"}),"\n",(0,s.jsx)(n.p,{children:"Imagine you're holding a hula hoop in front of you with both hands, and that it's positioned so your face is inline with the centre. Now tilt your head (not your eyes) so that you're looking at the top of the hoop. Follow the hoop around 360\xb0: no problem, we're able to recreate this."}),"\n",(0,s.jsxs)(n.p,{children:["Now looking at the top of the hoop again, move straight down to the bottom of the hoop without following its curvature. And the same from left to right. Repeat the same with the finished Memoji above. Notice how in real life your head moves away from the outline of the imaginary hoop, ",(0,s.jsx)(n.em,{children:"but"})," how in the Memoji the head doesn't tilt to look ",(0,s.jsx)(n.strong,{children:"within"})," the hoop. This is the limitation we're talking about."]}),"\n",(0,s.jsx)(n.p,{children:"It's kinda okay though, your mouse isn't normally over the Memoji, so it isn't too much of an issue."}),"\n",(0,s.jsx)(n.p,{children:"Anyway, recording the video! Mimic what you see in the finished article. Start the video with your head slightly tilting up, and slowly rotate it around 360\xb0."}),"\n","\n",(0,s.jsx)(i.Z,{image:d,alt:"Taking the Video"}),"\n",(0,s.jsxs)(n.p,{children:["You want to try and maintain a constant distance from the camera, as you want the first and last frame to be as close together as possible to hide the fact that the motion isn't actually continuous. This took many attempts, and while the recording I settled on isn't perfect, it's good enough - and I'm not rerecording it for the 48",(0,s.jsx)(n.sup,{children:"th"})," time \ud83d\ude05."]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"N.B."})," You'll probably find that no matter how hard you try, the raw video will never loop due to the 'reset' animation added at the end."]}),"\n",(0,s.jsx)(n.p,{children:"\ud83d\udd01 Pause for a second at the end of the recording and then trim the video to achieve the loop. It'll still take a few tries."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"channel-your-inner-alpha",children:(0,s.jsx)(n.a,{href:"#channel-your-inner-alpha",children:"Channel Your Inner Alpha!"})}),"\n",(0,s.jsxs)(n.p,{children:["Apple doesn't expose the Memoji in any sort of 'raw' or 3D format. Instead, all we've got is a video. A ",(0,s.jsx)(n.code,{children:".mov"}),". Straight out of my iPhone 11, across iMessage, and into trusty ",(0,s.jsx)(n.code,{children:"FFmpeg"}),", we can see some quite detailed information about the file."]}),"\n",(0,s.jsxs)(n.pre,{children:[(0,s.jsx)(s.Fragment,{children:(0,s.jsx)(n.span,{dangerouslySetInnerHTML:{__html:'<button class="clickToCopy" onmousedown="COPY_FN(event)" onmouseup="CLEAR_FN(event)">Copy</button>'}})}),(0,s.jsxs)(n.code,{className:"language-txt",children:["Input #0, ",(0,s.jsx)(n.span,{className:"token highlightA",children:"\u200bmov\u200b"}),",mp4,m4a,3gp,3g2,mj2, from './me-360t.mov':\n  Metadata:\n    major_brand     : qt\n    minor_version   : 0\n    compatible_brands: qt\n    creation_time   : 2020-11-24T18:30:38.000000Z\n    ",(0,s.jsx)(n.span,{className:"token highlightA",children:"\u200bcom.apple.quicktime.description: Memoji video, skin tone: Fairest Skin Tone 1; hairstyle: Maple, Short and straight updo with side parting; eyes: Blue;, facial hair: Flaxen, Shadow moustache and beard;\u200b"}),"\n  Duration: 00:00:05.25, start: 0.000000, bitrate: 1992 kb/s\n    Stream #0:0(und): Audio: aac (LC) (mp4a / 0x6134706D), 44100 Hz, mono, fltp, 63 kb/s (default)\n    Metadata:\n      creation_time   : 2020-11-24T18:30:38.000000Z\n      handler_name    : Core Media Audio\n    Stream #0:1(und): Video: ",(0,s.jsx)(n.span,{className:"token highlightA",children:"\u200bhevc\u200b"})," (Main) (hvc1 / 0x31637668), ",(0,s.jsx)(n.span,{className:"token highlightA",children:"\u200byuv420p\u200b"}),"(tv, bt709), 640x480, 1753 kb/s, 57.56 fps, 60 tbr, 600 tbn, 600 tbc (default)\n    Metadata:\n      creation_time   : 2020-11-24T18:30:38.000000Z\n      handler_name    : Core Media Video\n      encoder         : HEVC\n\n"]})]}),"\n",(0,s.jsxs)(n.p,{children:["Firstly we can see that we're dealing with a ",(0,s.jsx)(n.code,{children:".mov"})," container holding ",(0,s.jsx)(n.code,{children:"HEVC"})," aka ",(0,s.jsx)(n.code,{children:"H.265"})," encoded data. This is good news: a modern-ish format that supports alpha channels. Interestingly Apple also embeds plenty of metadata about the Memoji in the file. Useful for an accessibility description maybe \ud83d\ude2f!"]}),"\n",(0,s.jsxs)(n.pre,{children:[(0,s.jsx)(s.Fragment,{children:(0,s.jsx)(n.span,{dangerouslySetInnerHTML:{__html:'<button class="clickToCopy" onmousedown="COPY_FN(event)" onmouseup="CLEAR_FN(event)">Copy</button>'}})}),(0,s.jsx)(n.code,{className:"language-txt",children:"com.apple.quicktime.description:\n\tMemoji video,\n\t\tskin tone: Fairest Skin Tone 1;\n\t\thairstyle: Maple, Short and straight updo with side parting;\n\t  eyes: Blue;\n\t ,facial hair: Flaxen, Shadow moustache and beard;\n"})]}),"\n",(0,s.jsx)(n.p,{children:"The file format supports alpha channels! Great! Would Apple be so good as to make sure of it? Opening the file in QuickTime we can see that there is indeed an alpha channel - and its being used \ud83c\udf89!"}),"\n","\n",(0,s.jsx)(i.Z,{image:h,alt:"QuickTime"}),"\n",(0,s.jsxs)(n.p,{children:["While the file has an alpha channel, I couldn't get ",(0,s.jsx)(n.code,{children:"FFmpeg"})," to acknowledge it. Looking in the output above we only see a pixel format of ",(0,s.jsx)(n.code,{children:"yuv420p"})," listed. It seems that as of now, ",(0,s.jsx)(n.code,{children:"FFmpeg"}),"'s ",(0,s.jsx)(n.code,{children:"libx265"})," codec doesn't support ",(0,s.jsx)(n.code,{children:"H.265"})," with ",(0,s.jsx)(n.code,{children:"yuva420p"})," pixel data",(0,s.jsx)(n.sup,{children:(0,s.jsx)(n.a,{href:"#def-3",id:"ref-3","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"3"})})," - the key difference between ",(0,s.jsx)(n.code,{children:"yuva420p"})," and ",(0,s.jsx)(n.code,{children:"yuv420p"})," being the ",(0,s.jsx)(n.code,{children:"a"}),", for alpha."]}),"\n",(0,s.jsxs)(n.p,{children:["My initial idea was to use ",(0,s.jsx)(n.code,{children:"FFmpeg"})," to transcode the ",(0,s.jsx)(n.code,{children:"H.265"})," into ",(0,s.jsx)(n.code,{children:"VP8"}),"/",(0,s.jsx)(n.code,{children:"VP9"})," given its less than stellar cross compatibility",(0,s.jsx)(n.sup,{children:(0,s.jsx)(n.a,{href:"#def-4",id:"ref-4","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"4"})}),", then I'd have support for all major browsers using both formats combined",(0,s.jsx)(n.sup,{children:(0,s.jsx)(n.a,{href:"#def-5",id:"ref-5","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"5"})}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["While I was able to convert the ",(0,s.jsx)(n.code,{children:".mov"})," to ",(0,s.jsx)(n.code,{children:".webm"}),", due to ",(0,s.jsx)(n.code,{children:"FFmpeg"}),"'s lack of ",(0,s.jsx)(n.code,{children:"yuva420p"})," support I was loosing the alpha channel - which we're trying to preserve \ud83d\ude43."]}),"\n",(0,s.jsx)(n.h2,{id:"changing-tact",children:(0,s.jsx)(n.a,{href:"#changing-tact",children:"Changing Tact"})}),"\n",(0,s.jsxs)(n.p,{children:["Rereading the ",(0,s.jsx)(n.code,{children:"FFmpeg"})," output, I noticed the ",(0,s.jsx)(n.code,{children:"handler_name"})," was ",(0,s.jsx)(n.code,{children:"Core Media Video"}),". That's a very 'Apple' name, and indeed it's the name of Apple's shared macOS/iOS media framework. Given that QuickTime reports it, iOS generated it, and Preview shows it, I guessed there was a fair chance that tools I'd need to make use of the ",(0,s.jsx)(n.code,{children:"yuva420p"})," alpha channel were already built in to macOS. If I could use these, then I could export the frames, and reencode them to ",(0,s.jsx)(n.code,{children:"webm"})," using ",(0,s.jsx)(n.code,{children:"FFmpeg"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Again with Apple, this turned out to be an issue of exposing the means to the end user. QuickTime 7 ",(0,s.jsx)(n.em,{children:"used"})," to offer the ",(0,s.jsx)(n.code,{children:"export to image sequence"})," functionality",(0,s.jsx)(n.sup,{children:(0,s.jsx)(n.a,{href:"#def-6",id:"ref-6","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"6"})}),", but sometime between versions 7 and 10.6 the option was canned. QuickTime 7 isn't supported after macOS Mojave",(0,s.jsx)(n.sup,{children:(0,s.jsx)(n.a,{href:"#def-7",id:"ref-7","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"7"})})," \ud83d\ude22. iMovie also lacks the capability. ",(0,s.jsx)(n.strong,{children:"I can confirm that Final Cut Pro X does have it though!"})]}),"\n",(0,s.jsx)(n.p,{children:"I don't really want to buy FCP X, and while it's only one click away on many-a-site \ud83d\udc40\u2026it's a bit overkill for such a small task."}),"\n",(0,s.jsx)(n.h2,{id:"upvc",children:(0,s.jsx)(n.a,{href:"#upvc",children:"uPVC"})}),"\n",(0,s.jsxs)(n.p,{children:["Given that the ",(0,s.jsx)(n.code,{children:"Core Media"})," framework is built in to macOS, I decided the path of least resistance was probably to just write a quick CLI tool to extract the frames using ",(0,s.jsx)(n.code,{children:"AVFoundation"})," (which uses ",(0,s.jsx)(n.code,{children:"Core Media"})," under the hood). And that's exactly what I did:"]}),"\n",(0,s.jsxs)(n.figure,{className:"code",children:[(0,s.jsxs)(n.pre,{children:[(0,s.jsx)(s.Fragment,{children:(0,s.jsx)(n.span,{dangerouslySetInnerHTML:{__html:'<button class="clickToCopy" onmousedown="COPY_FN(event)" onmouseup="CLEAR_FN(event)">Copy</button>'}})}),(0,s.jsxs)(n.code,{className:"language-swift",children:[(0,s.jsx)(n.span,{className:"token operator",children:"..."}),"\n\n",(0,s.jsx)(n.span,{className:"token keyword",children:"let"})," trackReaderOutput ",(0,s.jsx)(n.span,{className:"token operator",children:"="})," ",(0,s.jsx)(n.span,{className:"token class-name",children:"AVAssetReaderTrackOutput"}),(0,s.jsx)(n.span,{className:"token punctuation",children:"("}),"track",(0,s.jsx)(n.span,{className:"token punctuation",children:":"})," videoTrack",(0,s.jsx)(n.span,{className:"token punctuation",children:","})," outputSettings",(0,s.jsx)(n.span,{className:"token punctuation",children:":"}),(0,s.jsx)(n.span,{className:"token punctuation",children:"["}),(0,s.jsx)(n.span,{className:"token class-name",children:"String"}),(0,s.jsx)(n.span,{className:"token punctuation",children:"("}),(0,s.jsx)(n.span,{className:"token constant",children:"kCVPixelBufferPixelFormatTypeKey"}),(0,s.jsx)(n.span,{className:"token punctuation",children:")"}),(0,s.jsx)(n.span,{className:"token punctuation",children:":"})," ",(0,s.jsx)(n.span,{className:"token class-name",children:"NSNumber"}),(0,s.jsx)(n.span,{className:"token punctuation",children:"("}),"value",(0,s.jsx)(n.span,{className:"token punctuation",children:":"})," kCVPixelFormatType_32BGRA",(0,s.jsx)(n.span,{className:"token punctuation",children:")"}),(0,s.jsx)(n.span,{className:"token punctuation",children:"]"}),(0,s.jsx)(n.span,{className:"token punctuation",children:")"}),"\n\n",(0,s.jsx)(n.span,{className:"token operator",children:"..."}),"\n\n",(0,s.jsx)(n.span,{className:"token keyword",children:"while"})," ",(0,s.jsx)(n.span,{className:"token keyword",children:"let"})," sampleBuffer ",(0,s.jsx)(n.span,{className:"token operator",children:"="})," trackReaderOutput",(0,s.jsx)(n.span,{className:"token punctuation",children:"."}),(0,s.jsx)(n.span,{className:"token function",children:"copyNextSampleBuffer"}),(0,s.jsx)(n.span,{className:"token punctuation",children:"("}),(0,s.jsx)(n.span,{className:"token punctuation",children:")"})," ",(0,s.jsx)(n.span,{className:"token punctuation",children:"{"}),"\n\t",(0,s.jsx)(n.span,{className:"token keyword",children:"if"})," ",(0,s.jsx)(n.span,{className:"token keyword",children:"let"})," imageBuffer ",(0,s.jsx)(n.span,{className:"token operator",children:"="})," ",(0,s.jsx)(n.span,{className:"token class-name",children:"CMSampleBufferGetImageBuffer"}),(0,s.jsx)(n.span,{className:"token punctuation",children:"("}),"sampleBuffer",(0,s.jsx)(n.span,{className:"token punctuation",children:")"})," ",(0,s.jsx)(n.span,{className:"token punctuation",children:"{"}),"\n\t  ",(0,s.jsx)(n.span,{className:"token keyword",children:"let"})," ciimage",(0,s.jsx)(n.span,{className:"token punctuation",children:":"})," ",(0,s.jsx)(n.span,{className:"token class-name",children:"CIImage"})," ",(0,s.jsx)(n.span,{className:"token operator",children:"="})," ",(0,s.jsx)(n.span,{className:"token class-name",children:"CIImage"}),(0,s.jsx)(n.span,{className:"token punctuation",children:"("}),"cvPixelBuffer",(0,s.jsx)(n.span,{className:"token punctuation",children:":"})," imageBuffer",(0,s.jsx)(n.span,{className:"token punctuation",children:")"}),"\n\t  ",(0,s.jsx)(n.span,{className:"token keyword",children:"if"})," ",(0,s.jsx)(n.span,{className:"token keyword",children:"let"})," colorSpace ",(0,s.jsx)(n.span,{className:"token operator",children:"="})," ",(0,s.jsx)(n.span,{className:"token class-name",children:"CGColorSpace"}),(0,s.jsx)(n.span,{className:"token punctuation",children:"("}),"name",(0,s.jsx)(n.span,{className:"token punctuation",children:":"})," ",(0,s.jsx)(n.span,{className:"token class-name",children:"CGColorSpace"}),(0,s.jsx)(n.span,{className:"token punctuation",children:"."}),"sRGB",(0,s.jsx)(n.span,{className:"token punctuation",children:")"})," ",(0,s.jsx)(n.span,{className:"token punctuation",children:"{"}),"\n\t\t  ",(0,s.jsx)(n.span,{className:"token keyword",children:"let"})," format ",(0,s.jsx)(n.span,{className:"token operator",children:"="})," ",(0,s.jsx)(n.span,{className:"token class-name",children:"CIFormat"}),(0,s.jsx)(n.span,{className:"token punctuation",children:"."}),"RGBA16 ",(0,s.jsx)(n.span,{className:"token comment",children:"// 16-bit RGBA"}),"\n\t\t  ",(0,s.jsx)(n.span,{className:"token keyword",children:"let"})," quality ",(0,s.jsx)(n.span,{className:"token operator",children:"="})," ",(0,s.jsx)(n.span,{className:"token number",children:"1.0"})," ",(0,s.jsx)(n.span,{className:"token comment",children:"// 1.0 = lossless"}),"\n\n\t\t\t",(0,s.jsx)(n.span,{className:"token operator",children:"..."}),"\n\n\t\t  ",(0,s.jsx)(n.span,{className:"token keyword",children:"try"})," context",(0,s.jsx)(n.span,{className:"token punctuation",children:"."}),(0,s.jsx)(n.span,{className:"token function",children:"writePNGRepresentation"}),(0,s.jsx)(n.span,{className:"token punctuation",children:"("}),"of",(0,s.jsx)(n.span,{className:"token punctuation",children:":"})," ciimage",(0,s.jsx)(n.span,{className:"token punctuation",children:","})," to",(0,s.jsx)(n.span,{className:"token punctuation",children:":"})," outURL",(0,s.jsx)(n.span,{className:"token punctuation",children:","})," format",(0,s.jsx)(n.span,{className:"token punctuation",children:":"})," format",(0,s.jsx)(n.span,{className:"token punctuation",children:","})," colorSpace",(0,s.jsx)(n.span,{className:"token punctuation",children:":"})," colorSpace",(0,s.jsx)(n.span,{className:"token punctuation",children:","})," options",(0,s.jsx)(n.span,{className:"token punctuation",children:":"})," ",(0,s.jsx)(n.span,{className:"token punctuation",children:"["}),(0,s.jsx)(n.span,{className:"token constant",children:"kCGImageDestinationLossyCompressionQuality"})," ",(0,s.jsx)(n.span,{className:"token keyword",children:"as"})," ",(0,s.jsx)(n.span,{className:"token class-name",children:"CIImageRepresentationOption"}),(0,s.jsx)(n.span,{className:"token punctuation",children:":"})," quality",(0,s.jsx)(n.span,{className:"token punctuation",children:"]"}),(0,s.jsx)(n.span,{className:"token punctuation",children:")"}),"\n\t  ",(0,s.jsx)(n.span,{className:"token punctuation",children:"}"}),"\n\t",(0,s.jsx)(n.span,{className:"token punctuation",children:"}"}),"\n  frameIndex ",(0,s.jsx)(n.span,{className:"token operator",children:"+="})," ",(0,s.jsx)(n.span,{className:"token number",children:"1"}),"\n",(0,s.jsx)(n.span,{className:"token punctuation",children:"}"}),"\n\n",(0,s.jsx)(n.span,{className:"token operator",children:"..."}),"\n"]})]}),(0,s.jsx)(n.figcaption,{children:(0,s.jsx)(n.a,{href:"https://github.com/reubn/uPVC",children:"https://github.com/reubn/uPVC"})})]}),"\n",(0,s.jsxs)(n.p,{children:["Written in ",(0,s.jsx)(n.code,{children:"Swift"}),", it just iterates over the frames of a video file (which could theoretically be any video format supported by ",(0,s.jsx)(n.code,{children:"AVFoundation"}),"), and exports ",(0,s.jsx)(n.code,{children:"16-bit RGBA"})," lossless ",(0,s.jsx)(n.code,{children:"PNG"}),"s. I'm not a ",(0,s.jsx)(n.code,{children:"Swift"})," native, so the main logic was ",(0,s.jsx)(n.del,{children:"copied"})," adapted \ud83d\udc4c from Stack Overflow",(0,s.jsx)(n.sup,{children:(0,s.jsx)(n.a,{href:"#def-8",id:"ref-8","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"8"})}),". I also ended up adding the options to export every ",(0,s.jsx)(n.code,{children:"n % x === 0"}),"-th frame: for reasons I'll come on to later \ud83d\ude0f."]}),"\n",(0,s.jsx)(n.h2,{id:"return-of-the-ffmpeg",children:(0,s.jsxs)(n.a,{href:"#return-of-the-ffmpeg",children:["Return of the ",(0,s.jsx)(n.code,{children:"FFmpeg"}),"!"]})}),"\n",(0,s.jsxs)(n.p,{children:["Armed with our sequence of image files, we're ready to merge them back into a video using ",(0,s.jsx)(n.code,{children:"FFmpeg"}),"."]}),"\n",(0,s.jsxs)(n.pre,{children:[(0,s.jsx)(s.Fragment,{children:(0,s.jsx)(n.span,{dangerouslySetInnerHTML:{__html:'<button class="clickToCopy" onmousedown="COPY_FN(event)" onmouseup="CLEAR_FN(event)">Copy</button>'}})}),(0,s.jsxs)(n.code,{className:"language-bash",children:[(0,s.jsx)(n.span,{className:"token function",children:"ffmpeg"}),(0,s.jsx)(n.span,{className:"token argument",children:" -framerate"})," ",(0,s.jsx)(n.span,{className:"token number",children:"60"}),(0,s.jsx)(n.span,{className:"token argument",children:" -i"})," ./frame-%0d.png",(0,s.jsx)(n.span,{className:"token argument",children:" -c:v"})," libvpx-vp9",(0,s.jsx)(n.span,{className:"token argument",children:" -pix_fmt"})," yuva420p",(0,s.jsx)(n.span,{className:"token argument",children:" -speed"})," ",(0,s.jsx)(n.span,{className:"token number",children:"0"}),(0,s.jsx)(n.span,{className:"token argument",children:" -crf"})," ",(0,s.jsx)(n.span,{className:"token number",children:"16"}),(0,s.jsx)(n.span,{className:"token argument",children:" -an"})," ./me.webm\n"]})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"FFmpeg"})," does support ",(0,s.jsx)(n.code,{children:"yuva420p"})," with ",(0,s.jsx)(n.code,{children:"webm"}),", so we're good, and the file size isn't terrible - at around ",(0,s.jsx)(n.code,{children:"1MB"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"rough-as-a-bears-arse",children:(0,s.jsx)(n.a,{href:"#rough-as-a-bears-arse",children:"Rough as a Bear's Arse"})}),"\n",(0,s.jsxs)(n.p,{children:["All that's left now is to embed the video, and hookup ",(0,s.jsx)(n.code,{children:"mousemove"})," event handlers to scrub through the video. Surely."]}),"\n",(0,s.jsxs)(n.p,{children:["In Safari this works fine - buttery smooth - Chrome however really chokes on the video. I tried lowering the quality via the ",(0,s.jsx)(n.code,{children:"-crf"})," parameter in ",(0,s.jsx)(n.code,{children:"FFmpeg"}),", but no matter how low the quality, the FPS, or how much event handler throttling I applied, Chrome still jittered and stalled its way through the animation. The same applied for ",(0,s.jsx)(n.code,{children:"VP8"}),"."]}),"\n","\n",(0,s.jsx)(r.Z,{controls:!0,muted:!0,autoPlay:!0,loop:!0,video:{size:{width:677,height:370},sources:[{src:p,type:"video/webm"},{src:m,type:"video/mp4"}]}}),"\n",(0,s.jsxs)(n.p,{children:["Given that Safari has no trouble I wonder if this is an issue of the ",(0,s.jsx)(n.code,{children:"HTML5"})," ",(0,s.jsx)(n.code,{children:"video"})," element's scrubbing not being optimised for animation via ",(0,s.jsx)(n.code,{children:".currentTime"})," in ",(0,s.jsx)(n.code,{children:"Blink"}),"-based browsers. I also tried this in combination with ",(0,s.jsx)(n.code,{children:"window.requestAnimationFrame"})," to no avail."]}),"\n",(0,s.jsxs)(n.p,{children:["Another difference between the browsers was that Safari was consuming the ",(0,s.jsx)(n.code,{children:".mov"})," file, while Chrome was using the ",(0,s.jsx)(n.code,{children:".webm"})," file. They both have similar file sizes, but very different compression algorithms. Regardless, most compressed video cannot be played back in reverse, or be seeked",(0,s.jsx)(n.sup,{children:"(sic)"})," at realtime speeds."]}),"\n",(0,s.jsx)(n.p,{children:"As an analogy, most video compression works a bit like a zip (no pun intended):"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\ud83e\uddb7 Teeth of the zip represent video frames"}),"\n",(0,s.jsx)(n.li,{children:"\ud83d\udc4d You can unzip your coat in one direction, and it works fine."}),"\n",(0,s.jsx)(n.li,{children:"\ud83d\udc4e You can't unzip your coat in reverse - or skip bits out - leaving them zipped together."}),"\n",(0,s.jsx)(n.li,{children:"\ud83e\udd10 Picking a random point on the zip, all preceding zip must be undone in order to reach it."}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Keeping it simple - in video you have ",(0,s.jsx)(n.code,{children:"I frames"}),", and ",(0,s.jsx)(n.code,{children:"P frames"}),(0,s.jsx)(n.sup,{children:(0,s.jsx)(n.a,{href:"#def-9",id:"ref-9","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"9"})}),".",(0,s.jsx)(n.code,{children:"I frames"})," are like the frames that we extracted using ",(0,s.jsx)(n.code,{children:"uPVC"})," - whole images in their own right. ",(0,s.jsx)(n.code,{children:"P frames"})," are not bona fide images. Instead they contain references to previous ",(0,s.jsx)(n.code,{children:"I"})," and ",(0,s.jsx)(n.code,{children:"P frames"}),", specifying elements they have in common to save space, and how they differ."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["To decode an ",(0,s.jsx)(n.code,{children:"I frame"})," you just need that frame \ud83d\udc4c."]}),"\n",(0,s.jsxs)(n.li,{children:["To decode a ",(0,s.jsx)(n.code,{children:"P frame"})," however you also need all preceding frames that it references, and all preceding frames that all those frames reference \u2026 all the way back to the closest ",(0,s.jsx)(n.code,{children:"I frame"}),(0,s.jsx)(n.sup,{children:(0,s.jsx)(n.a,{href:"#def-10",id:"ref-10","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"10"})}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Scrubbing through the video (seeking in response to mouse movements) would require the decoder to jump around 'the zip' and necessitate 'unzipping' a lot of previous (which is ",(0,s.jsx)(n.strong,{children:"ahead"})," if playing in reverse) frames / footage. Perhaps this aspect of video encoding is where some of the issues arose."]}),"\n",(0,s.jsxs)(n.p,{children:["This doesn't fully explain the problems as there wasn't such an issue with ",(0,s.jsx)(n.code,{children:"H.265"})," in Safari - but it most probably contributed. Perhaps Chrome didn't buffer the uncompressed video into memory, while Safari did \ud83e\udd37\u200d\u2640\ufe0f."]}),"\n",(0,s.jsx)(n.h2,{id:"abort-abort",children:(0,s.jsx)(n.a,{href:"#abort-abort",children:"Abort, Abort"})}),"\n",(0,s.jsx)(n.p,{children:"Given that the video method wasn't going to work, I had to think of an alternative. If we run with the idea of video simply being a series of frames, it's not a crazy idea to skip the whole 'video' encoding malarkey and just deal with frames directly."}),"\n",(0,s.jsxs)(n.p,{children:["We've already done the hard work of extracting the frames, and have a folder of ",(0,s.jsx)(n.code,{children:".png"})," files."]}),"\n",(0,s.jsxs)(n.p,{children:["I wrote a small ",(0,s.jsx)(n.code,{children:"React"})," component to listen for global ",(0,s.jsx)(n.code,{children:"mousemove"})," event, and display the corresponding frame. This works great, and surprisingly is a lot smoother than the video! I'm not going to go over the ins and outs of it here, but I will point out a few things of note."]}),"\n",(0,s.jsxs)(n.p,{children:["Firstly the interactivity is a bonus, and in order to not get in the way of more pressing resources, we load the frames via a ",(0,s.jsx)(n.code,{children:"useEffect"})," hook. We load a sensible ",(0,s.jsx)(n.code,{children:"defaultFrame"})," first and that serves as a placeholder until the rest of them have loaded. We listen for the ",(0,s.jsx)(n.code,{children:".decode()"})," ",(0,s.jsx)(n.code,{children:"Promise"})," on the ",(0,s.jsx)(n.code,{children:"defaultFrame"})," ",(0,s.jsx)(n.code,{children:"Image"})," to signal that it's loaded and then animate it in."]}),"\n",(0,s.jsxs)(n.p,{children:["Downloading lots of (smallish) image files isn't a problem for people on fast internet connections, but consideration has to be taken for those on slower connections. The ",(0,s.jsx)(n.code,{children:"React"})," component allows about ",(0,s.jsx)(n.code,{children:"5sec"})," for the images to download before cancelling all but the ",(0,s.jsx)(n.code,{children:"defaultFrame"})," request. This allows any other more important content to come through faster, and gracefully falls back to a static Memoji."]}),"\n",(0,s.jsxs)(n.p,{children:["At this point we still don't have interactivity. That only occurs once all the frames have downloaded - to stop jitter in the first few moments. In testing it was quite common to stop moving the mouse ",(0,s.jsx)(n.em,{children:"just"})," before the point at which the frames became available. When the user then resumes mouse movement there's a jump between the ",(0,s.jsx)(n.code,{children:"defaultFrame"})," placeholder and the required frame."]}),"\n",(0,s.jsx)(n.p,{children:"To overcome this, we listen for the user's mouse movement even before the frames have downloaded. There isn't the option to directly query the user agent for the mouse position, so we rely on recording these preemptive events to get it - and then smoothly transition to the corresponding frame. It's better to transition when the mouse isn't moving than when it is."}),"\n",(0,s.jsxs)(n.p,{children:["This works fine on traditional mouse and keyboard devices, but - for obvious reasons - works a little differently on touchscreens. We listen for the ",(0,s.jsx)(n.code,{children:"onTouch"})," counterparts, but also animate the Memoji by default - as to not rely on the user touching the Memoji. Once they have, touch interaction takes over. As a next step I'd like to overlay a call-to-action to highlight this to touch users, and make the animation a little more natural."]}),"\n",(0,s.jsx)(n.h2,{id:"a-little-on-the-large-side",children:(0,s.jsx)(n.a,{href:"#a-little-on-the-large-side",children:"A Little on the Large Side"})}),"\n",(0,s.jsxs)(n.p,{children:["Video compression may have hindered our dreams of smooth scrubbing, but it's used for a reason. The 315 frames only took up around ",(0,s.jsx)(n.code,{children:"1MB"}),". Extracted in their raw ",(0,s.jsx)(n.code,{children:".png"})," form they occupy a staggering ",(0,s.jsx)(n.code,{children:"65.4MB"}),". Ouch \ud83d\ude33. Admittedly ",(0,s.jsx)(n.code,{children:".png"})," probably isn't the most efficient format for storing high fidelity graphics, but it is lossless, and does support alpha channels: fine for an intermediate format."]}),"\n",(0,s.jsxs)(n.p,{children:["Firstly I saved ",(0,s.jsx)(n.code,{children:"2/3"})," off the total size by only keeping every 3",(0,s.jsx)(n.sup,{children:"rd"})," frame. While perhaps counterintuitive, this didn't affect the smoothness of the final result in any perceivable way."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"ImageOptim"})," managed to reduce the size down further by ",(0,s.jsx)(n.code,{children:"47%"}),". But that's still not anywhere near where we need it to be."]}),"\n",(0,s.jsxs)(n.p,{children:["I settled on ",(0,s.jsx)(n.code,{children:".webp"}),". Support is good",(0,s.jsx)(n.sup,{children:(0,s.jsx)(n.a,{href:"#def-11",id:"ref-11","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"11"})}),", and I set about converting the ",(0,s.jsx)(n.code,{children:".png"})," files. The ",(0,s.jsx)(n.code,{children:"cwebp"})," tool",(0,s.jsx)(n.sup,{children:(0,s.jsx)(n.a,{href:"#def-12",id:"ref-12","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"12"})})," is the way to go, and ",(0,s.jsx)(n.code,{children:".webp"})," itself has a multitude of options to when encoding the image."]}),"\n",(0,s.jsxs)(n.pre,{children:[(0,s.jsx)(s.Fragment,{children:(0,s.jsx)(n.span,{dangerouslySetInnerHTML:{__html:'<button class="clickToCopy" onmousedown="COPY_FN(event)" onmouseup="CLEAR_FN(event)">Copy</button>'}})}),(0,s.jsxs)(n.code,{className:"language-bash",children:[(0,s.jsx)(n.span,{className:"token keyword",children:"for"})," ",(0,s.jsx)(n.span,{className:"token for-or-select variable",children:"file"})," ",(0,s.jsx)(n.span,{className:"token keyword",children:"in"})," *.png",(0,s.jsx)(n.span,{className:"token punctuation",children:";"})," ",(0,s.jsx)(n.span,{className:"token keyword",children:"do"})," ",(0,s.jsx)(n.span,{className:"token function",children:"cwebp"}),(0,s.jsx)(n.span,{className:"token argument",children:" -lossless"}),(0,s.jsx)(n.span,{className:"token argument",children:" -mt"})," ",(0,s.jsxs)(n.span,{className:"token string",children:['"./',(0,s.jsx)(n.span,{className:"token variable simple",children:"$file"}),'"']}),(0,s.jsx)(n.span,{className:"token argument",children:" -o"})," ",(0,s.jsxs)(n.span,{className:"token string",children:['"./',(0,s.jsxs)(n.span,{className:"token variable",children:[(0,s.jsx)(n.span,{className:"token variable-symbols",children:"${file"}),(0,s.jsx)(n.span,{className:"token operator",children:"/"}),(0,s.jsx)(n.span,{className:"token operator",children:"/"}),"\\.png",(0,s.jsx)(n.span,{className:"token operator",children:"/"}),".webp",(0,s.jsx)(n.span,{className:"token variable-symbols",children:"}"})]}),'"']}),(0,s.jsx)(n.span,{className:"token punctuation",children:";"})," ",(0,s.jsx)(n.span,{className:"token keyword",children:"done"}),"\n"]})]}),"\n",(0,s.jsxs)(n.p,{children:["It's a really neat format and supports both ",(0,s.jsx)(n.code,{children:"lossless"}),", and ",(0,s.jsx)(n.code,{children:"lossy"})," compression. It even has a middle ground ",(0,s.jsx)(n.code,{children:"near_lossless"})," option. Even with ",(0,s.jsx)(n.code,{children:"lossless"})," compression, it managed to reduce the total burden by a massive ",(0,s.jsx)(n.code,{children:"93%"})," to only ",(0,s.jsx)(n.code,{children:"4.6MB"}),"! While really impressive, this is still a bit hefty, as I was hoping to dip into the ",(0,s.jsx)(n.code,{children:"KB"})," range."]}),"\n",(0,s.jsxs)(n.p,{children:["After going through many permutations, I settled on a ",(0,s.jsx)(n.code,{children:"lossy"})," quality of ",(0,s.jsx)(n.code,{children:"80"}),". Going lower reduced the image quality, but didn't justify the cost, giving only negligible improvements in file size. I also used ",(0,s.jsx)(n.code,{children:"cwebp"}),"'s builtin crop function to try and shave off every last byte."]}),"\n",(0,s.jsxs)(n.pre,{children:[(0,s.jsx)(s.Fragment,{children:(0,s.jsx)(n.span,{dangerouslySetInnerHTML:{__html:'<button class="clickToCopy" onmousedown="COPY_FN(event)" onmouseup="CLEAR_FN(event)">Copy</button>'}})}),(0,s.jsxs)(n.code,{className:"language-bash",children:[(0,s.jsx)(n.span,{className:"token keyword",children:"for"})," ",(0,s.jsx)(n.span,{className:"token for-or-select variable",children:"file"})," ",(0,s.jsx)(n.span,{className:"token keyword",children:"in"})," *.png",(0,s.jsx)(n.span,{className:"token punctuation",children:";"})," ",(0,s.jsx)(n.span,{className:"token keyword",children:"do"})," ",(0,s.jsx)(n.span,{className:"token function",children:"cwebp"}),(0,s.jsx)(n.span,{className:"token argument",children:" -q"})," ",(0,s.jsx)(n.span,{className:"token number",children:"80"}),(0,s.jsx)(n.span,{className:"token argument",children:" -mt"}),(0,s.jsx)(n.span,{className:"token argument",children:" -crop"})," ",(0,s.jsx)(n.span,{className:"token number",children:"100"})," ",(0,s.jsx)(n.span,{className:"token number",children:"26"})," ",(0,s.jsx)(n.span,{className:"token number",children:"459"})," ",(0,s.jsx)(n.span,{className:"token number",children:"350"})," ",(0,s.jsxs)(n.span,{className:"token string",children:['"./',(0,s.jsx)(n.span,{className:"token variable simple",children:"$file"}),'"']}),(0,s.jsx)(n.span,{className:"token argument",children:" -o"})," ",(0,s.jsxs)(n.span,{className:"token string",children:['"./',(0,s.jsxs)(n.span,{className:"token variable",children:[(0,s.jsx)(n.span,{className:"token variable-symbols",children:"${file"}),(0,s.jsx)(n.span,{className:"token operator",children:"/"}),(0,s.jsx)(n.span,{className:"token operator",children:"/"}),"\\.png",(0,s.jsx)(n.span,{className:"token operator",children:"/"}),".webp",(0,s.jsx)(n.span,{className:"token variable-symbols",children:"}"})]}),'"']}),(0,s.jsx)(n.span,{className:"token punctuation",children:";"})," ",(0,s.jsx)(n.span,{className:"token keyword",children:"done"}),"\n"]})]}),"\n",(0,s.jsxs)(n.p,{children:["After running this, and cooking an egg on my CPU \ud83c\udf73, I was left with a total size of ",(0,s.jsx)(n.code,{children:"868KB"}),". Pretty fucking good \ud83d\udc4c. A combined saving of just under ",(0,s.jsx)(n.code,{children:"99%"}),"!"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:".webp"})," itself is based on the ",(0,s.jsx)(n.code,{children:"VP8"})," video codec that we wanted to use initially. Given this, I guess the savings aren't that surprising, and basically means that we've come full circle, just without the limitations of video compression."]}),"\n",(0,s.jsxs)(n.p,{children:["There are some avenues to explore to try and reduce the total file size some more. ",(0,s.jsx)(n.code,{children:".webp"})," supports animation, but I don't think the ability to scrub through animated images is exposed in the web environment at the present time, and it may well suffer from the same issues as ",(0,s.jsx)(n.code,{children:"VP8"}),"/",(0,s.jsx)(n.code,{children:"VP9"}),". Maybe serving the frames as an animated ",(0,s.jsx)(n.code,{children:".webp"})," file and then decoding them to canvas is an option - but I am yet to explore the possibility."]}),"\n",(0,s.jsx)(n.p,{children:"A simpler option might be to combine the frames into a sprite sheet."}),"\n",(0,s.jsxs)(n.pre,{children:[(0,s.jsx)(s.Fragment,{children:(0,s.jsx)(n.span,{dangerouslySetInnerHTML:{__html:'<button class="clickToCopy" onmousedown="COPY_FN(event)" onmouseup="CLEAR_FN(event)">Copy</button>'}})}),(0,s.jsxs)(n.code,{className:"language-bash",children:[(0,s.jsx)(n.span,{className:"token function",children:"montage"})," ./*.webp",(0,s.jsx)(n.span,{className:"token argument",children:" -define"})," webp:lossless",(0,s.jsx)(n.span,{className:"token operator",children:"="}),"true",(0,s.jsx)(n.span,{className:"token argument",children:" -geometry"})," ",(0,s.jsx)(n.span,{className:"token string",children:"'1x1+0+0<'"}),(0,s.jsx)(n.span,{className:"token argument",children:" -tile"})," 10x",(0,s.jsx)(n.span,{className:"token argument",children:" -background"})," none ./output.webp\n\n",(0,s.jsx)(n.span,{className:"token function",children:"cwebp"}),(0,s.jsx)(n.span,{className:"token argument",children:" -q"})," ",(0,s.jsx)(n.span,{className:"token number",children:"80"})," ./output.webp",(0,s.jsx)(n.span,{className:"token argument",children:" -o"})," ./compressed.webp\n"]})]}),"\n",(0,s.jsxs)(n.p,{children:["I've had a play using ",(0,s.jsx)(n.code,{children:"ImageMagick"}),"'s ",(0,s.jsx)(n.code,{children:"montage"}),", and I've only been able to reduce the total size to about ",(0,s.jsx)(n.code,{children:"715KB"})," after ",(0,s.jsx)(n.code,{children:"lossy"})," compression. I still need to test if this meagre compression benefit outweighs the speed benefits that we achieve by serving individual frames concurrently over ",(0,s.jsx)(n.code,{children:"HTTP2"}),"."]}),"\n","\n",(0,s.jsx)(i.Z,{image:u,alt:"Sprites"}),"\n",(0,s.jsx)(n.h2,{id:"are-we-nearly-there-yet",children:(0,s.jsx)(n.a,{href:"#are-we-nearly-there-yet",children:"Are we nearly there yet?"})}),"\n",(0,s.jsxs)(n.p,{children:["While what we have works, it still has a number of caveats, chiefly the ",(0,s.jsx)(n.code,{children:"868KB"})," file size burden, and the limited axises the Memoji is able to move in. I'd still like to reduce the former, and to summarise, the avenues I'm currently exploring are:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Animated ",(0,s.jsx)(n.code,{children:".webp"})," frames decoded to ",(0,s.jsx)(n.code,{children:"canvas"})]}),"\n",(0,s.jsx)(n.li,{children:"Sprite sheets"}),"\n",(0,s.jsx)(n.li,{children:"Load reduced quality frames for movement, and download higher quality once movement has stopped"}),"\n",(0,s.jsx)(n.li,{children:"Only load frames that surround cursor's starting position"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:".avif"})," once support is good enough"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["The latter is more difficult, and would require a completely new approach. While the ",(0,s.jsx)(n.code,{children:"AvatarKit"})," framework isn't officially exposed, people have managed to use it on side loaded apps",(0,s.jsx)(n.sup,{children:(0,s.jsx)(n.a,{href:"#def-13",id:"ref-13","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"13"})}),". The 3D models are also stored at a known location",(0,s.jsx)(n.sup,{children:(0,s.jsx)(n.a,{href:"#def-14",id:"ref-14","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"14"})}),", extracting them shouldn't be difficult, but I have very little knowledge of how to composite the features into 'me', nor do I know how animating them would work. If this were to be possible, then it would solve the current limitations on movement - ",(0,s.jsx)(n.em,{children:"and"})," - via ",(0,s.jsx)(n.code,{children:"WebGL"})," the issues with file size."]}),"\n",(0,s.jsxs)(n.section,{"data-footnotes":!0,className:"footnotes",children:[(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{id:"def-1","ref-number":"1",children:[(0,s.jsx)(n.a,{href:"https://www.joshwcomeau.com/",children:"https://www.joshwcomeau.com/"})," ",(0,s.jsx)(n.a,{href:"#ref-1","data-footnote-backref":!0,className:"data-footnote-backref","aria-label":"Back to content",children:"\u21a9"})]}),"\n",(0,s.jsxs)(n.li,{id:"def-2","ref-number":"2",children:[(0,s.jsx)(n.a,{href:"https://twitter.com/Sam0711er/status/959535639174746112",children:"https://twitter.com/Sam0711er/status/959535639174746112"})," ",(0,s.jsx)(n.a,{href:"#ref-2","data-footnote-backref":!0,className:"data-footnote-backref","aria-label":"Back to content",children:"\u21a9"})]}),"\n",(0,s.jsxs)(n.li,{id:"def-3","ref-number":"3",children:[(0,s.jsx)(n.a,{href:"https://trac.ffmpeg.org/ticket/7965",children:"https://trac.ffmpeg.org/ticket/7965"})," ",(0,s.jsx)(n.a,{href:"#ref-3","data-footnote-backref":!0,className:"data-footnote-backref","aria-label":"Back to content",children:"\u21a9"})]}),"\n",(0,s.jsxs)(n.li,{id:"def-4","ref-number":"4",children:[(0,s.jsx)(n.a,{href:"https://caniuse.com/hevc",children:"https://caniuse.com/hevc"})," ",(0,s.jsx)(n.a,{href:"#ref-4","data-footnote-backref":!0,className:"data-footnote-backref","aria-label":"Back to content",children:"\u21a9"})]}),"\n",(0,s.jsxs)(n.li,{id:"def-5","ref-number":"5",children:[(0,s.jsx)(n.a,{href:"https://caniuse.com/webm",children:"https://caniuse.com/webm"})," ",(0,s.jsx)(n.a,{href:"#ref-5","data-footnote-backref":!0,className:"data-footnote-backref","aria-label":"Back to content",children:"\u21a9"})]}),"\n",(0,s.jsxs)(n.li,{id:"def-6","ref-number":"6",children:[(0,s.jsx)(n.a,{href:"https://video.stackexchange.com/questions/4033/exporting-mov-vr-to-multiple-still-frames",children:"https://video.stackexchange.com/questions/4033/exporting-mov-vr-to-multiple-still-frames"})," ",(0,s.jsx)(n.a,{href:"#ref-6","data-footnote-backref":!0,className:"data-footnote-backref","aria-label":"Back to content",children:"\u21a9"})]}),"\n",(0,s.jsxs)(n.li,{id:"def-7","ref-number":"7",children:[(0,s.jsx)(n.a,{href:"https://support.apple.com/kb/DL923?locale=en_GB",children:"https://support.apple.com/kb/DL923?locale=en_GB"})," ",(0,s.jsx)(n.a,{href:"#ref-7","data-footnote-backref":!0,className:"data-footnote-backref","aria-label":"Back to content",children:"\u21a9"})]}),"\n",(0,s.jsxs)(n.li,{id:"def-8","ref-number":"8",children:[(0,s.jsx)(n.a,{href:"https://stackoverflow.com/questions/39570745/accesing-individual-frames-using-av-player/39573702#39573702",children:"https://stackoverflow.com/questions/39570745/accesing-individual-frames-using-av-player/39573702#39573702"})," ",(0,s.jsx)(n.a,{href:"#ref-8","data-footnote-backref":!0,className:"data-footnote-backref","aria-label":"Back to content",children:"\u21a9"})]}),"\n",(0,s.jsxs)(n.li,{id:"def-9","ref-number":"9",children:[(0,s.jsx)(n.a,{href:"https://en.m.wikipedia.org/wiki/Video_compression_picture_types",children:"https://en.m.wikipedia.org/wiki/Video_compression_picture_types"})," ",(0,s.jsx)(n.a,{href:"#ref-9","data-footnote-backref":!0,className:"data-footnote-backref","aria-label":"Back to content",children:"\u21a9"})]}),"\n",(0,s.jsxs)(n.li,{id:"def-10","ref-number":"10",children:[(0,s.jsx)(n.a,{href:"https://github.com/google/ExoPlayer/issues/2191#issuecomment-266783472",children:"https://github.com/google/ExoPlayer/issues/2191#issuecomment-266783472"})," ",(0,s.jsx)(n.a,{href:"#ref-10","data-footnote-backref":!0,className:"data-footnote-backref","aria-label":"Back to content",children:"\u21a9"})]}),"\n",(0,s.jsxs)(n.li,{id:"def-11","ref-number":"11",children:[(0,s.jsx)(n.a,{href:"https://caniuse.com/webp",children:"https://caniuse.com/webp"})," ",(0,s.jsx)(n.a,{href:"#ref-11","data-footnote-backref":!0,className:"data-footnote-backref","aria-label":"Back to content",children:"\u21a9"})]}),"\n",(0,s.jsxs)(n.li,{id:"def-12","ref-number":"12",children:[(0,s.jsx)(n.a,{href:"https://developers.google.com/speed/webp/docs/cwebp",children:"https://developers.google.com/speed/webp/docs/cwebp"})," ",(0,s.jsx)(n.a,{href:"#ref-12","data-footnote-backref":!0,className:"data-footnote-backref","aria-label":"Back to content",children:"\u21a9"})]}),"\n",(0,s.jsxs)(n.li,{id:"def-13","ref-number":"13",children:[(0,s.jsx)(n.a,{href:"https://github.com/simonbs/SBSAnimoji",children:"https://github.com/simonbs/SBSAnimoji"})," ",(0,s.jsx)(n.a,{href:"#ref-13","data-footnote-backref":!0,className:"data-footnote-backref","aria-label":"Back to content",children:"\u21a9"})]}),"\n",(0,s.jsxs)(n.li,{id:"def-14","ref-number":"14",children:[(0,s.jsx)(n.a,{href:"https://www.reddit.com/r/jailbreak/comments/j2rxd5/question_is_there_a_way_to_ripexport/",children:"https://www.reddit.com/r/jailbreak/comments/j2rxd5/question_is_there_a_way_to_ripexport/"})," ",(0,s.jsx)(n.a,{href:"#ref-14","data-footnote-backref":!0,className:"data-footnote-backref","aria-label":"Back to content",children:"\u21a9"})]}),"\n"]}),"\n"]})]})},t=Object.assign({},(0,a.ah)(),e.components),f=t.wrapper;return f?(0,s.jsx)(f,Object.assign({},e,{children:(0,s.jsx)(n,{})})):n()}},8751:function(e){e.exports={video:"styles_video__2Jvca",loading:"styles_loading__V87G8"}},7136:function(e){e.exports={memojiContainer:"styles_memojiContainer__GUMW7",memoji:"styles_memoji__rcmXN"}},1151:function(e,n,t){"use strict";t.d(n,{ah:function(){return o}});var s=t(7294);const a=s.createContext({});function o(e){const n=s.useContext(a);return s.useMemo((()=>"function"===typeof e?e(n):{...n,...e}),[n,e])}}}]);